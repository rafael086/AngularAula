// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200202021524_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtdPessoas")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataEvento = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email1@email.com",
                            ImagemURL = "img1.jpg",
                            Local = "SP",
                            Lote = "001",
                            QtdPessoas = 100,
                            Telefone = "09090909",
                            Tema = ".NET Core"
                        },
                        new
                        {
                            Id = 2,
                            DataEvento = new DateTime(2020, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email2@email.com",
                            ImagemURL = "img2.jpg",
                            Local = "RJ",
                            Lote = "002",
                            QtdPessoas = 200,
                            Telefone = "09090909",
                            Tema = "ANGULAR"
                        },
                        new
                        {
                            Id = 3,
                            DataEvento = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email3@email.com",
                            ImagemURL = "img3.jpg",
                            Local = "MG",
                            Lote = "003",
                            QtdPessoas = 300,
                            Telefone = "09090909",
                            Tema = ".NET Core e ANGULAR"
                        });
                });

            modelBuilder.Entity("Domain.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkEvento")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkEvento");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("Domain.Palestrante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiniCurriculo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Palestrantes");
                });

            modelBuilder.Entity("Domain.PalestranteEvento", b =>
                {
                    b.Property<int>("FkEvento")
                        .HasColumnType("int");

                    b.Property<int>("FkPalestrante")
                        .HasColumnType("int");

                    b.HasKey("FkEvento", "FkPalestrante");

                    b.HasIndex("FkPalestrante");

                    b.ToTable("PalestranteEvento");
                });

            modelBuilder.Entity("Domain.RedeSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FkEvento")
                        .HasColumnType("int");

                    b.Property<int?>("FkPalestrante")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FkEvento");

                    b.HasIndex("FkPalestrante");

                    b.ToTable("RedeSociais");
                });

            modelBuilder.Entity("Domain.Lote", b =>
                {
                    b.HasOne("Domain.Evento", "Evento")
                        .WithMany("Lotes")
                        .HasForeignKey("FkEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.PalestranteEvento", b =>
                {
                    b.HasOne("Domain.Evento", "Evento")
                        .WithMany("PalestranteEventos")
                        .HasForeignKey("FkEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Palestrante", "Palestrante")
                        .WithMany("PalestranteEventos")
                        .HasForeignKey("FkPalestrante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.RedeSocial", b =>
                {
                    b.HasOne("Domain.Evento", "Evento")
                        .WithMany("RedeSociais")
                        .HasForeignKey("FkEvento");

                    b.HasOne("Domain.Palestrante", "Palestrante")
                        .WithMany("RedeSociais")
                        .HasForeignKey("FkPalestrante");
                });
#pragma warning restore 612, 618
        }
    }
}
